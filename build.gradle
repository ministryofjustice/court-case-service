import java.time.Instant
import java.time.LocalDate

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.github.ben-manes.versions' version '0.26.0'
    id "org.flywaydb.flyway" version "6.1.0"
    id 'org.owasp.dependencycheck' version '5.2.4'
}

repositories {
    mavenCentral()
    maven {
        url 'https://s3-us-west-2.amazonaws.com/dynamodb-local/release'
    }
}

project.sourceCompatibility = 11
project.targetCompatibility = 11

group = 'uk.gov.justice.probation'

def today = Instant.now()
def todaysDate = LocalDate.now().format('yyyy-MM-dd')
version = System.getenv('CI') ? "${todaysDate}.${System.getenv('CIRCLE_BUILD_NUM')}" : todaysDate

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    manifest {
        attributes (
            'Implementation-Title': rootProject.name, 'Implementation-Version': archiveVersion
        )
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/postgres?currentSchema=courtcaseservice&user=root&password=dev'
}

dependencyCheck {
    cveValidForHours=4
    suppressionFiles = ['dependency-check-suppress.xml']
    format = 'ALL'
    analyzers {
        assemblyEnabled = false
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = rootProject.name
            version = version
            group = group
            name = rootProject.name
            time = today
            additional = [
                    by                   : System.properties['user.name'],
                    operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
                    continuousIntegration: System.getenv('CI') ? true : false,
                    machine              : InetAddress.localHost.hostName
            ]
        }
    }
}

test {
    useJUnitPlatform ()
    filter {
        excludeTestsMatching '*SmokeTest'
        excludeTestsMatching '*WIP*'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform ()
    filter {
        includeTestsMatching '*IntTest'
        excludeTestsMatching '*WIP*'
    }
}

task unitTest(type: Test) {
    useJUnitPlatform ()
    filter {
        excludeTestsMatching '*IntTest'
        excludeTestsMatching '*SmokeTest'
        excludeTestsMatching '*WIP*'
    }
}

task wipTest(type: Test) {
    filter {
        includeTestsMatching '*WIP*'
    }
}

task smokeTest(type: Test) {
    filter {
        includeTestsMatching '*SmokeTest'
    }
}

dependencies {
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    compileOnly 'com.google.guava:guava:27.1-jre'

    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'

    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.flywaydb:flyway-core'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.vladmihalcea:hibernate-types-52:2.4.4'

    runtime 'org.postgresql:postgresql:42.2.8'

    implementation platform('software.amazon.awssdk:bom:2.10.15')

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.9.0'
    testImplementation ('io.rest-assured:rest-assured:3.0.3'){
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }
    testImplementation 'commons-io:commons-io:2.6'

    testImplementation(platform("org.junit:junit-bom:5.6.0"))
    testImplementation("org.junit.jupiter:junit-jupiter")

    testImplementation("junit:junit:4.13")

    testRuntimeOnly("org.junit.platform:junit-platform-launcher") {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }

    testCompile "com.github.tomakehurst:wiremock-jre8:2.26.2"

    implementation ('org.springframework:spring-web:5.2.3.RELEASE') {
        because 'Transitive dependency. Previous versions have a known vulnerability'
    }
    implementation ('io.netty:netty-codec-http:4.1.44.Final') {
        because 'Transitive dependency. Previous versions have a known vulnerability'
    }
}

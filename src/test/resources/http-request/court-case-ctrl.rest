###

###
# Update a case by court and code
PUT http://{{host}}/court/{{courtCode}}/case/{{caseNo}}
Content-Type: application/json

{
  "caseId": "1168461",
  "caseNo": "1600028975",
  "crn": "X320744",
  "pnc": "D/1234560BC",
  "listNo": "2nd",
  "courtCode": "SHF",
  "defendantType": "PERSON",
  "courtRoom": "1",
  "sessionStartTime": "2021-12-13T09:00:00",
  "probationStatus": "Previously known",
  "previouslyKnownTerminationDate": null,
  "preSentenceActivity": true,
  "suspendedSentenceOrder": true,
  "breach": true,
  "offences": [
    {
      "offenceTitle": "1Theft from a shop",
      "offenceSummary": "On 01/01/2015 at own, stole article, to the value of Â£987.00, belonging to person.",
      "act": "Contrary to section 1(1) and 7 of the Theft Act 1968.",
      "sequenceNumber": 2
    }
  ],
  "defendantName": "Mr Dylan Adam Armstrong",
  "defendantAddress": {
    "line1": "27",
    "line2": "Elm Place",
    "postcode": "ad21 5dr",
    "line3": "Bangor"
  },
  "defendantSex": "M",
  "defendantDob": "1957-12-12",
  "nationality1": "British"
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 201, "Response status is not 201");
    });

    client.test("Response content-type is json", function() {
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
%}

### COURT AND CASE ENDPOINT
### Get by court and case
# Gives 200 because it's all known
GET http://{{host}}/court/{{courtCode}}/case/{{caseNo}}
Accept: application/json

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 200, "Response status is not 200");
    });

    client.test("Response content-type is json", function() {
        var type = response.contentType.mimeType;
        client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
    });
%}

###
# Gives 404 because case no is unknown
GET http://{{host}}/court/SHF/case/0
Accept: application/json

###
# Gives 404 because court is unknown
http://{{host}}/court/SHF/case/0
Accept: application/json

###
### COURT AND CASE ENDPOINT
###

# No date - expect 400 bad request
GET http://{{host}}/court/SHF/cases
Accept: application/json

### Normal - 200
GET http://{{host}}/court/SHF/cases?date=2020-01-13
Accept: application/json

### Court not found expect 404
GET http://{{host}}/court/XXX/cases?date=2020-01-13
Accept: application/json

### Gets empty cases Normal - 200
GET http://{{host}}/court/SHF/cases?date=1903-01-13
Accept: application/json

###
# Update a case by court and code
PUT http://{{host}}/court/{{courtCode}}/cases/purge
Content-Type: application/json

{
    "2020-01-01": [
        "1000000",
        "1000001"
    ],
    "2020-01-02": [
        "1000003",
        "1000007"
    ],
    "2020-01-03": [
        "1000010"
    ]
}

> {%
    client.test("Request executed successfully", function() {
        client.assert(response.status === 204, "Response status is not 204");
    });
%}

{{- if .Values.ingress.enabled -}}
{{- $fullName := include "app.fullname" . -}}
{{- $ingressPath := .Values.ingress.path -}}
{{- $serviceName := .Values.ingress.service -}}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    app: {{ template "app.name" . }}
    chart: {{ template "app.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    ingressClassName: modsec
    {{ if .Values.ingress.enable_whitelist }}nginx.ingress.kubernetes.io/whitelist-source-range: {{ include "app.joinListWithComma" .Values.whitelist | quote }}{{ end }}
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
    external-dns.alpha.kubernetes.io/set-identifier: {{ $fullName }}-{{ .Release.Namespace }}-{{ .Values.ingress.contextColour }}
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    # Secure the retry all dlqs endpoint from outside of the Kubernetes ingress
    nginx.ingress.kubernetes.io/configuration-snippet: |
      server_tokens off;
      location /{{ template "app.fullname" . }}/queue-admin/retry-all-dlqs {
        deny all;
        return 401;
      }
spec:
  tls:
  {{- range .Values.ingress.hosts }}
  - hosts:
    - {{ .host }}
    {{ if .cert_secret }}secretName: {{ .cert_secret }}{{ end }}
  {{- end }}
  rules:
  {{- range .Values.ingress.hosts }}
    - host: {{ .host }}
      http:
        paths:
          - path: {{ $ingressPath }}
            pathType: ImplementationSpecific
            backend:
              service:
                name: {{ $serviceName }}
                port:
                  name: http
        {{- if $.Values.data_dictionary }}
          - path: /meta/schema
            pathType: ImplementationSpecific
            backend:
              service:
                name: pic-data-dictionary
                port:
                  name: http
        {{- end }}
  {{- end }}
{{- end }}
